{"version":3,"file":"static/js/phonebook-page.0aa5169d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","views/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"Contacts_cardList__OnSBo\",\"cardBox\":\"Contacts_cardBox__I0rM2\",\"cardValues\":\"Contacts_cardValues__dLpEd\",\"deleteButton\":\"Contacts_deleteButton__F3fET\"};","import { useDispatch, useSelector } from 'react-redux';\nimport s from './Contacts.module.css';\nimport {\n  deleteContacts,\n  fetchContacts,\n  getVisibleContacts,\n} from '../../redux/phonebook/selectors';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const loggedIn = useSelector(getIsLoggedIn);\n\n  const onDeleteContactCard = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  useEffect(() => {\n    if (!loggedIn) {\n      return navigate('/signIn');\n    }\n  }, [loggedIn, navigate]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.cardList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.cardBox} key={id}>\n          <p className={s.cardValues}>\n            {name}: {number}\n          </p>\n          <div className={s.buttonBox}>\n            <button className={s.deleteButton} onClick={() => onDeleteContactCard(id)}>\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookTitle\":\"Phonebook_phonebookTitle__juosK\",\"inputBox\":\"Phonebook_inputBox__5SpBn\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\",\"buttonBox\":\"Phonebook_buttonBox__41P5C\",\"addButton\":\"Phonebook_addButton__+oDOx\"};","import { BsFillTelephonePlusFill } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\nimport s from './Phonebook.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts, getContacts } from '../../redux/phonebook/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport default function Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    const repeatName = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    if (!repeatName) {\n      Notify.success(`${name} is added in contacts`);\n      dispatch(addContacts({ name, number }));\n      setNumber('');\n      setName('');\n      return;\n    }\n    Notify.warning(`${name} is already in contacts`);\n  };\n\n  return (\n    <>\n      <h2 className={s.phonebookTitle}>\n        Phonebook\n        <IconContext.Provider\n          value={{\n            color: 'rgb(255, 69, 0)',\n            size: '25px',\n            style: { margin: '0 0 0 15px' },\n          }}\n        >\n          <BsFillTelephonePlusFill />\n        </IconContext.Provider>\n      </h2>\n      <form className={s.phonebookForm} onSubmit={formSubmit}>\n        <div className={s.inputBox}>\n          {' '}\n          <label className={s.label}>Name</label>\n          <input\n            className={s.input}\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only contain letters, an apostrophe, a dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan and others\"\n            required\n          />\n        </div>\n        <div className={s.inputBox}>\n          <label className={s.label}>Phone</label>\n          <input\n            className={s.input}\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The phone number must be numeric and may contain spaces, dashes, parentheses, and may begin with +\"\n            required\n          />\n        </div>\n        <div className={s.buttonBox}>\n          <button className={s.addButton} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import s from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/selectors';\nimport { filterChangeAction } from '../../redux/phonebook/actions';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onFilterChange = event =>\n    dispatch(filterChangeAction(event.target.value));\n\n  return (\n    <div>\n      <h2 className={s.filterTitle}>Find contacts by name</h2>\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n}\n","import Contacts from '../../components/Contacts/Contacts';\nimport Phonebook from '../../components/Phonebook/Phonebook';\nimport Filter from '../../components/Filter';\n\nexport default function PhonebookPage() {\n  return (\n    <section>\n      <Phonebook />\n      <Filter />\n      <Contacts />\n    </section>\n  );\n}\n"],"names":["Contacts","contacts","useSelector","getVisibleContacts","dispatch","useDispatch","navigate","useNavigate","loggedIn","getIsLoggedIn","useEffect","fetchContacts","className","s","map","id","name","number","onClick","deleteContacts","onDeleteContactCard","Phonebook","useState","setName","setNumber","getContacts","handleChange","e","target","value","color","size","style","margin","onSubmit","preventDefault","find","contact","toLowerCase","Notify","addContacts","onChange","type","pattern","title","required","Filter","getFilter","event","filterChangeAction","PhonebookPage"],"sourceRoot":""}