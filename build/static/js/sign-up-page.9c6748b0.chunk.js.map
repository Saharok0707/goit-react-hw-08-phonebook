{"version":3,"file":"static/js/sign-up-page.9c6748b0.chunk.js","mappings":"uMACA,GAAgB,SAAW,6BAA6B,MAAQ,0BAA0B,MAAQ,0BAA0B,UAAY,8BAA8B,UAAY,8BAA8B,SAAW,8B,2DCO5M,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WACR,GAAIH,EACF,OAAOF,EAAS,gBAEjB,CAACA,EAAUE,IAEd,IAAMI,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAEd,OAAQf,GACN,IAAK,QACHD,EAASgB,GACT,MACF,IAAK,WACHZ,EAAYY,GACZ,MACF,IAAK,OACHd,EAAQc,GACR,MACF,QACE,SAYN,OACE,8BACE,kBAAMC,UAAWC,EAAAA,cAAiBC,SAVnB,SAAAL,GACjBA,EAAEM,iBACFf,GAASgB,EAAAA,EAAAA,IAAO,CAAEtB,MAAAA,EAAOI,SAAAA,EAAUF,KAAAA,KACnCD,EAAS,IACTE,EAAQ,IACRE,EAAY,KAKV,WACE,iBAAKa,UAAWC,EAAAA,SAAhB,WACE,mBAAOD,UAAWC,EAAAA,MAAlB,mBACO,iBAAMD,UAAWC,EAAAA,SAAjB,mBAEP,kBACED,UAAWC,EAAAA,MACXF,MAAOf,EACPqB,SAAUT,EACVU,KAAK,OACLtB,KAAK,OACLuB,UAAQ,QAGZ,iBAAKP,UAAWC,EAAAA,SAAhB,WACE,mBAAOD,UAAWC,EAAAA,MAAlB,mBACO,iBAAMD,UAAWC,EAAAA,SAAjB,mBAEP,kBACED,UAAWC,EAAAA,MACXF,MAAOjB,EACPuB,SAAUT,EACVU,KAAK,QACLtB,KAAK,QACLuB,UAAQ,QAGZ,iBAAKP,UAAWC,EAAAA,SAAhB,WACE,mBAAOD,UAAWC,EAAAA,MAAlB,sBACU,iBAAMD,UAAWC,EAAAA,SAAjB,mBAEV,kBACED,UAAWC,EAAAA,MACXF,MAAOb,EACPmB,SAAUT,EACVU,KAAK,WACLtB,KAAK,WACLwB,MAAM,uCACND,UAAQ,QAGZ,gBAAKP,UAAWC,EAAAA,UAAhB,UACE,mBAAQD,UAAWC,EAAAA,UAAaK,KAAK,SAArC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/SignUpPage/SignUpPage.module.css?6324","views/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputBox\":\"SignUpPage_inputBox__WPaHL\",\"label\":\"SignUpPage_label__RM0MU\",\"input\":\"SignUpPage_input__RPw-N\",\"buttonBox\":\"SignUpPage_buttonBox__HiAqP\",\"addButton\":\"SignUpPage_addButton__3pmZ-\",\"required\":\"SignUpPage_required__dH1sf\"};","import s from './SignUpPage.module.css';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../redux/auth/auth-operations';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport default function SignUpPage() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const loggedIn = useSelector(getIsLoggedIn);\n\n  useEffect(() => {\n    if (loggedIn) {\n      return navigate('/phonebook');\n    }\n  }, [navigate, loggedIn]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    dispatch(signUp({ email, password, name }));\n    setEmail('');\n    setName('');\n    setPassword('');\n  };\n\n  return (\n    <section>\n      <form className={s.phonebookForm} onSubmit={formSubmit}>\n        <div className={s.inputBox}>\n          <label className={s.label}>\n            Login<span className={s.required}>*</span>\n          </label>\n          <input\n            className={s.input}\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n        </div>\n        <div className={s.inputBox}>\n          <label className={s.label}>\n            Email<span className={s.required}>*</span>\n          </label>\n          <input\n            className={s.input}\n            value={email}\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </div>\n        <div className={s.inputBox}>\n          <label className={s.label}>\n            Password<span className={s.required}>*</span>\n          </label>\n          <input\n            className={s.input}\n            value={password}\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            title=\"minimum number of characters - seven\"\n            required\n          />\n        </div>\n        <div className={s.buttonBox}>\n          <button className={s.addButton} type=\"submit\">\n            Create\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"names":["SignUpPage","useState","email","setEmail","name","setName","password","setPassword","dispatch","useDispatch","navigate","useNavigate","loggedIn","useSelector","getIsLoggedIn","useEffect","handleChange","e","target","value","className","s","onSubmit","preventDefault","signUp","onChange","type","required","title"],"sourceRoot":""}